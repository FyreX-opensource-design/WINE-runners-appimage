# WINE env
export WINEPREFIX=${WINEPREFIX:-"$HOME/.wine-appimage"}
export WINEDEBUG=${WINEDEBUG:-"fixme-all"}

# DXVK env
export DXVK_HUD=${DXVK_HUD:-"0"}
export DXVK_LOG_LEVEL=${DXVK_LOG_LEVEL:-"none"}
export DXVK_STATE_CACHE=${DXVK_STATE_CACHE:-"0"}
export DXVK_CONFIG_FILE=${DXVK_CONFIG_FILE:-"$progHome/dxvk.conf"}

# check gpu vendor
VENDOR=$(glxinfo -B | grep "OpenGL vendor")

if [[ $VENDOR == *"Intel"* ]]; then
  export VK_ICD_FILENAMES="/usr/share/vulkan/icd.d/intel_icd.i686.json:/usr/share/vulkan/icd.d/intel_icd.x86_64.json"
elif [[ $VENDOR == *"NVIDIA"* ]]; then
  export VK_ICD_FILENAMES="/usr/share/vulkan/icd.d/nvidia_icd.json"
elif [[ $VENDOR == *"Radeon"* ]]; then
  export VK_ICD_FILENAMES="/usr/share/vulkan/icd.d/radeon_icd.i686.json:/usr/share/vulkan/icd.d/radeon_icd.x86_64.json"
fi

# Allow the AppImage to be symlinked to e.g., /usr/bin/wineserver
if [ -n "$APPIMAGE" ] ; then
  BINARY_NAME=$(basename "$ARGV0")
else
  BINARY_NAME=$(basename "$0")
fi

if   read -r MAIN < <(find "$APPDIR/bin" "$APPDIR/usr/bin" -iname "$BINARY_NAME" -print -quit); then
  echo "INFO:wine: '$MAIN $*'"
elif read -r MAIN < <(find "$APPDIR/bin" "$APPDIR/usr/bin" -iname "$(basename "${1##*-}")" -print -quit); then
  shift
  echo "INFO:wine: '$MAIN $*'"
elif read -r MAIN < <(find "$APPDIR/bin" "$APPDIR/usr/bin" \( -iname "wine" -o -iname "wine64" \) -print -quit); then
  echo "INFO:wine: '$MAIN $*'"
else
  echo "ERR:wine binaries not found"
  exit 1
fi

"$MAIN" "$@"
